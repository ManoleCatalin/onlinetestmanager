@model OTM.ViewModels.Tests.DisplayTestsViewModel
@*
<div class="content-wrapper">
    <div class="container-fluid">
        <h1>@Html.DisplayFor(model => model.Description)</h1>
        <div class="content-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-4">
                        <form asp-action="Display">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <input asp-for="ExerciseId" type="hidden"/>
                            </div>
                            <div class="form-group">
                                <input asp-for="UserId" type="hidden" />
                            </div>
                            <div class="form-group">
                                <input asp-for="TestInstanceId" type="hidden" />
                            </div>
                            <div class="form-group">
                                <input asp-for="Description" type="hidden" />
                            </div>
                            @Html.EditorFor(x => x.Answers)
                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
*@
<script>
    var countDownDate = new Date(@Model.StaDateTime.Month+" "+@Model.StaDateTime.Day+" "+@Model.StaDateTime.Year+" "+@Model.StaDateTime.Hour+":"+@Model.StaDateTime.Minute+":"+@Model.StaDateTime.Second).getTime()+@Model.Duration*60000;

    var x = setInterval(function() {

        var now =new Date().getTime();
        
        var distance = countDownDate - now;
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);
       
        document.getElementById("demo").innerHTML = minutes + "m " + seconds + "s ";

        
        
    }, 1000);
</script>



<div class="content-wrapper">
    <div class="container-fluid">
        <div class="col-md-3"></div>
        <div class="col-md-6" style="text-align: center">
            <div class="box-header with-border" style="text-align: center">
                <i class="fa fa-clock-o"></i>
                <h3 class="box-title" style="font-size: 25px;">Exercise: </h3>
                    <h2 class="pull-right box-title" id="demo"></h2>
                
            </div>
           
            <div class="box box-solid">
                <!-- /.box-header -->
                <h1>@Html.DisplayFor(model => model.Description)</h1>
                <div class="box-body">
                    <div class="col-md-9 dl-horizontal">
                        <form asp-action="Display">
                            <div class="form-group">
                                <input asp-for="ExerciseId" type="hidden" />
                                <input asp-for="UserId" type="hidden" />
                                <input asp-for="CorrectAnswers" type="hidden"/>
                                <input asp-for="TestInstanceId" type="hidden" />
                                <input asp-for="Description" type="hidden" />
                                <table >
                                    @Html.EditorFor(x => x.Answers)
                                </table>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </form>

                    </div>
                      
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}